{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"","tags":["tag1","tag2"]},{"location":"#all-my-projects","title":"All my Projects","text":"<p>This website has all my projects that I have done and am working on. I am still in the process of adding my non 314 projects as that takes precedent</p>","tags":["tag1","tag2"]},{"location":"EGR%20314%20Team%20Project/","title":"EGR 314 Individual Board","text":"","tags":["tag1","tag2"]},{"location":"EGR%20314%20Team%20Project/#team-202-sensor-board","title":"Team 202 Sensor Board","text":"<p>This is the data sheet for EGR 314 Team 202's Sensor Board. The purpose of this board is to read the rotational velocity of the generator's motor as well as its voltage output via the hall effect sensor and internal ADC pin in the microcontroller. Team Page</p>","tags":["tag1","tag2"]},{"location":"EGR%20314%20Team%20Project/Code/","title":"Code","text":""},{"location":"EGR%20314%20Team%20Project/Code/#code","title":"Code","text":"<p>''#include \"mcc_generated_files/system/system.h\"</p> <p>uint16_t ms=0; uint16_t sec=0; uint8_t send = 0;</p>"},{"location":"EGR%20314%20Team%20Project/Code/#define-angle_address_1-0x0e","title":"define Angle_Address_1 0x0E","text":""},{"location":"EGR%20314%20Team%20Project/Code/#define-angle_address_2-0x0f","title":"define Angle_Address_2 0x0F","text":""},{"location":"EGR%20314%20Team%20Project/Code/#define-slave_address-0x36","title":"define Slave_Address 0x36","text":"<p>uint8_t  b[2] = {0x0,0x0}; uint8_t angleReg1 = Angle_Address_1; uint8_t angleReg2 = Angle_Address_2; float angle = 0.0f; float angleLast = 0.0f; int read = 0;</p> <p>void timer_callback(void) {     ms++;     if (ms&gt;1000)      {         ms -= 1000;         sec++;         send++;         read = 1;         IO_RC1_Toggle();     } }</p> <p>uint8_t send_message(char * my_message){     printf(\"%s\\n\",my_message);     return 1; }</p>"},{"location":"EGR%20314%20Team%20Project/Code/#define-bufsize-4","title":"define BUFSIZE 4","text":""},{"location":"EGR%20314%20Team%20Project/Code/#define-msgsize-64","title":"define MSGSIZE 64","text":""},{"location":"EGR%20314%20Team%20Project/Code/#define-teamsize-5","title":"define TEAMSIZE 5","text":""},{"location":"EGR%20314%20Team%20Project/Code/#define-msgtestsize-64","title":"define MSGTESTSIZE 64","text":""},{"location":"EGR%20314%20Team%20Project/Code/#define-msgtestchar-0","title":"define MSGTESTCHAR 0","text":"<p>const char my_id='c'; const char team_ids[TEAMSIZE+1]=\"abcdX\"; char buffer_in[BUFSIZE+1]; char message_in[MSGSIZE+1]; char message_out[MSGSIZE+1]; char c=0; unsigned int buffer_ii=0; unsigned int buffer_last_ii = 0; unsigned int message_ii=0; unsigned int message_last_ii=0; unsigned int message_incoming=0; int messageType = 2; uint8_t rpm = 0;</p> <p>void fill_string(char * mystring,char value,unsigned int size){     for (int ii=0;ii&lt;size;ii++){         mystring[ii]=value;     } }</p> <p>unsigned int find_char(char * mystring, char value,unsigned int size){     char c=0;     for (int ii=0;ii&lt;size;ii++){         c= mystring[ii];         if (c==value){             return 1;         }     }     return 0; }</p> <p>void handle_message(unsigned int ii){     message_in[ii] = 0;     char f = message_in[3];     if(f == 'c')     {         printf(\"Message is for you\\n\");         //do something with it     }     else if(f == 'X')     {         printf(\"Broadcast Message\\n\");         send_message(message_in);         return;         //return broadcast     }     else     {         send_message(message_in);         return;     }     printf(\"nobody should be sending to you\\n\"); }</p> <p>int main(void) {     buffer_in[BUFSIZE]=0;     message_in[MSGSIZE]=0;     fill_string(buffer_in,'a',BUFSIZE);     fill_string(message_in,'_',MSGSIZE);     message_in[MSGTESTSIZE]=MSGTESTCHAR;</p> <pre><code>uint16_t ms_last=0;\nuint16_t sec_last=0;\nSYSTEM_Initialize();\nINTERRUPT_GlobalInterruptEnable(); \nINTERRUPT_PeripheralInterruptEnable(); \nTimer1_Initialize();\nTimer1_Start();\n\nTMR1_OverflowCallbackRegister(timer_callback);\n\nUART1_Initialize();\nwhile(1)\n{\n    if(EUSART1_IsRxReady())\n    {\n        c= EUSART1_Read();\n        buffer_in[buffer_ii]=c;\n        if (buffer_in[buffer_last_ii]=='A' &amp; buffer_in[buffer_ii]=='Z'){\n            fill_string(message_in,'_',MSGSIZE);\n            message_in[MSGTESTSIZE]=MSGTESTCHAR;\n            message_incoming=1;\n            message_in[0] = buffer_in[buffer_last_ii];\n            message_ii=1;\n        }\n        if (buffer_in[buffer_last_ii]=='Y' &amp; buffer_in[buffer_ii]=='B'){\n            message_incoming=0;\n            message_in[message_ii] = buffer_in[buffer_ii];\n            message_last_ii= message_ii;\n            message_ii = message_ii+1;\n            handle_message(message_ii);\n        }\n        if (message_incoming!=0){\n            message_in[message_ii] = buffer_in[buffer_ii];\n\n            if (message_ii==2){\n                unsigned result = 0;\n                char d=0;\n                d = message_in[message_ii];\n                result= find_char(team_ids,d,TEAMSIZE);\n                if (result==0){\n                    printf(\"AZbaPIC: sender not in teamYB\\n\");\n                    message_incoming = 0;\n                    message_ii=0;\n                } else {\n                }\n            }\n\n            if (message_ii==2){\n                unsigned result = 0;\n                char d=0;\n                d = message_in[message_ii];\n                if (d=='c'){\n                    printf(\"AZbaPIC: sender is yourselfYB\\n\");\n                    message_incoming = 0;\n                    message_ii=0;\n                } else {\n                }\n            }\n\n            if (message_ii==3){\n                unsigned result = 0;\n                char d=0;\n                d = message_in[message_ii];\n                result= find_char(team_ids,d,TEAMSIZE);\n                if (result==0){\n                    printf(\"AZbaPIC: receiver not in teamYB\\n\");\n                    message_incoming = 0;\n                    message_ii=0;\n                } else {\n                }\n            }\n\n            message_last_ii= message_ii;\n            message_ii = message_ii+1;\n            if (message_ii&lt;MSGTESTSIZE){} else{\n                printf(\"AZbaPIC: message too large. deletingYB\\n\");\n                message_incoming=0;\n                message_ii=0;\n            }\n        }\n        buffer_last_ii= buffer_ii;\n        buffer_ii = (buffer_ii+1)%BUFSIZE;\n    }\n    sec_last = sec;\n    ms_last = ms;\n    if(read == 1)\n    {\n        angleLast = angle;\n\n        i2c_WriteRead(Slave_Address, &amp;angleReg1, 1, b, 1);\n        __delay_ms(10); \n        i2c_WriteRead(Slave_Address, &amp;angleReg2, 1, &amp;b[1], 1);\n\n        uint16_t raw_angle = ((b[0] &amp; 0x0F) &lt;&lt; 8) | b[1];\n        angle = ((float)raw_angle * 360.0f) / 4096.0f;\n\n        float delta_deg = angle - angleLast;\n\n        rpm = (delta_deg / 360.0f) * 60.0f;\n        read = 0;\n    }\n    if(send == 1)\n    {\n        printf(\"AZcX%d%dYB\",messageType,rpm);\n        send = 0;\n    }\n}\n</code></pre> <p>}''</p> <p></p>"},{"location":"EGR%20314%20Team%20Project/Component_Selection/","title":"Component Selection","text":""},{"location":"EGR%20314%20Team%20Project/Component_Selection/#hall-effect-sensor","title":"Hall Effect Sensor","text":"Model Pros Cons AS5600-ASOM $4.54 Link <ul><li>Used in Class</li><li>Programmable angle change</li><li>Uses I2C Communication</li><li>3.3V Operating Voltage</li></ul> <ul><li>Arduino Library</li><li>Cheap</li></ul> MLX90316KDC $5.52 Link <ul><li>Tri Axis Measurement</li><li>Uses I2C Communication</li></ul> <ul><li>4.5-5.5V Operating Voltage</li><li>Library for Arduino</li><li>Much more expensive</li></ul> AS5048B $7.46 Link <ul><li>0.05 Degree Measurement</li><li>Uses I2C Communication</li><li>3.3V Operating Voltage</li></ul> <ul><li>Few Extra Pins</li><li>No Library</li><li>Much more expensive</li></ul>"},{"location":"EGR%20314%20Team%20Project/Component_Selection/#selected-component","title":"Selected Component","text":"<p>Choice: Option 1: AS5600 Rationale: The reason for choosing this Hall Effect sensor is due to the familiarity of use. In addition, as we are just using it as a way to measure motor rotational speed we do not need one as accurate or expensive in favor of a less accurate cheaper option. The lack of a usable library means more digging into the data sheet for needed information but the Arduino libraries can help with example code.</p>"},{"location":"EGR%20314%20Team%20Project/Component_Selection/#switching-regulator","title":"Switching Regulator","text":"Model Pros Cons LM2575D2T $3.32 Link <ul><li>Used in Class</li><li>Few extra components</li><li>3.3V Output Voltage</li></ul> <ul><li>1A current output</li><li>Expensive</li></ul> TLV61046ADBVR $1.09 Link <ul><li>Cheap</li><li>Few extra components</li><li>3.3V output</li></ul> <ul><li>5.5V Max input</li><li>1A current output</li></ul> AP63203WU-7 $1.38 Link <ul><li>Cheap</li><li>2A current output</li><li>3.3V output</li></ul> <ul><li>lots of extra components</li><li>fast switching frequency making more noise</li></ul>"},{"location":"EGR%20314%20Team%20Project/Component_Selection/#selected-component_1","title":"Selected Component","text":"<p>Choice: Option 1: LM2575D2T Rationale: The reason for choosing this switching regulator is due to the low amount of external components and constant 1A current output as the rest of the system does not need more than \"\"mA.</p>"},{"location":"EGR%20314%20Team%20Project/Component_Selection/#simple-needed-components","title":"Simple Needed Components","text":"Component Specs Resistor <ul><li>10k Link</li><li>1k Link</li><li>330 Link</li><ul> Capacitor <ul><li>100nF Link</li><li>100uF Link</li><li>330uF Link</li><ul> Diode <ul><li>600mV @ 1A Link</li><ul> Inductor <ul><li>220uH Link</li><ul> LED <ul><li>150mA Link</li><ul> Fuse <ul><li>500mA Ih/ 1A It Link</li><li>100mA Ih/ 250mA It Link</li><ul> Simple AC Motor Non-Driven, position measured by sensor Link"},{"location":"EGR%20314%20Team%20Project/Component_Selection/#power-budget","title":"Power Budget","text":""},{"location":"EGR%20314%20Team%20Project/Messages/","title":"Messages","text":""},{"location":"EGR%20314%20Team%20Project/Messages/#message-structure","title":"Message Structure","text":"Bytes Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6-x Byte x+1 Byte x+2 Contents 'A' 'Z' sender ID receiver ID Message ID Message contents 'Y' 'B'"},{"location":"EGR%20314%20Team%20Project/Messages/#team-id","title":"Team ID","text":"Name Tyler Alex Frank Luis ID c a d b"},{"location":"EGR%20314%20Team%20Project/Messages/#messages-sent","title":"Messages Sent","text":"Bytes Byte 5 Variable Name Motor Speed Variable Type uint8_t Min Value 0 Max Value 127 Example 27"},{"location":"EGR%20314%20Team%20Project/Messages/#only-receiving-broadcast-messages","title":"Only receiving broadcast messages","text":""},{"location":"EGR%20314%20Team%20Project/Schematic/","title":"Schematic","text":""},{"location":"EGR%20314%20Team%20Project/Schematic/#schematic","title":"Schematic","text":"<ul> <li>Schemtaic Folder</li> </ul>"},{"location":"EGR%20314%20Team%20Project/Schematic/#pcb","title":"PCB","text":"<ul> <li>PCB Folder</li> </ul>"},{"location":"EGR%20314%20Team%20Project/block-diagram/","title":"Block Diagram","text":""},{"location":"EGR%20314%20Team%20Project/pic-table/","title":"PIC Table","text":"Pic Info Answer Model PIC18F26Q10 Product Page URL Product Datasheet URL(s) DataSheet Application Notes URL(s) HLVD DAC ADCC Coding Vendor link Digikey Example Code Code Unit cost $1.29 Absolute Maximum Current for entire IC 250mA Supply Voltage Range 1.8-5.5V Maximum GPIO current  (per pin) 50mA Supports External Interrupts? 3 Total Required Programming Hardware, Cost, URL Snap Works with MPLabX? Yes Works with Microchip Code Configurator? Yes Module # Available Needed Associated Pins (or * for any) GPIO 26 0 * ADC 16 1 2-18 UART 1 1 17-18/27-28 SPI 2 0 14-15/22-23 I2C 2 2 14-15/22-23 PWM 2 0 2-18 ICSP 1 1 3"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}